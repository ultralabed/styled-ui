(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{"+wNj":function(e,t,n){"use strict";function a(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}n.d(t,"a",(function(){return a}))},HbGN:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var a=n("+wNj");function r(e,t){if(null==e)return{};var n,r,l=Object(a.a)(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}},Km8e:function(e,t,n){"use strict";var a=Object.assign.bind(Object);e.exports=a,e.exports.default=e.exports},ZVZ0:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return j}));var a=n("ERkP"),r=n.n(a);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function b(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=r.a.createContext({}),p=function(e){var t=r.a.useContext(o),n=t;return e&&(n="function"===typeof e?e(t):b(b({},t),e)),n},d=function(e){var t=p(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},s="mdxType",O={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,o=c(e,["components","mdxType","originalType","parentName"]),d=p(n),s=a,u=d["".concat(i,".").concat(s)]||d[s]||O[s]||l;return n?r.a.createElement(u,b(b({ref:t},o),{},{components:n})):r.a.createElement(u,b({ref:t},o))}));function j(e,t){var n=arguments,a=t&&t.mdxType;if("string"===typeof e||a){var l=n.length,i=new Array(l);i[0]=u;var b={};for(var c in t)hasOwnProperty.call(t,c)&&(b[c]=t[c]);b.originalType=e,b[s]="string"===typeof e?e:a,i[1]=b;for(var o=2;o<l;o++)i[o]=n[o];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},aUHR:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/textarea",function(){return n("n1wu")}])},cxan:function(e,t,n){"use strict";function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}n.d(t,"a",(function(){return a}))},n1wu:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return p}));var a=n("cxan"),r=n("HbGN"),l=n("ERkP"),i=n.n(l),b=n("ZVZ0"),c=(i.a.createElement,{}),o="wrapper";function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(b.b)(o,Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(b.b)("h1",null,"Textarea"),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"Textarea")," component allows you to create a multi-line text input."),Object(b.b)("h2",null,"Import"),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"import Textarea from '@trendmicro/react-styled-ui/Textarea';\n// or\nimport { Textarea } from '@trendmicro/react-styled-ui';\n")),Object(b.b)("h2",null,"Usage"),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'<>\n  <TextLabel mb="1x">Label:</TextLabel>\n  <Textarea placeholder="Basic example" />\n  <Text size="xs" mt="1x">Help text for the text input</Text>\n</>\n')),Object(b.b)("h3",null,"Sizing"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},"The ",Object(b.b)("inlineCode",{parentName:"li"},"rows")," and ",Object(b.b)("inlineCode",{parentName:"li"},"cols")," properties allow you to specify an exact size for the ",Object(b.b)("inlineCode",{parentName:"li"},"<Textarea>")," to take. Setting these is a good idea for consistency, as browser defaults can differ."),Object(b.b)("li",{parentName:"ul"},"The ",Object(b.b)("inlineCode",{parentName:"li"},"maxLength")," property specifies a maximum number of characters that the ",Object(b.b)("inlineCode",{parentName:"li"},"Textarea")," is allowed to contain."),Object(b.b)("li",{parentName:"ul"},"The ",Object(b.b)("inlineCode",{parentName:"li"},"minLength")," property specifies a minimum length that is considered valid. ",Object(b.b)("inlineCode",{parentName:"li"},"Textarea")," will not submit (and is invalid) if it is empty, using the ",Object(b.b)("inlineCode",{parentName:"li"},"required")," attribute."),Object(b.b)("li",{parentName:"ul"},"The ",Object(b.b)("inlineCode",{parentName:"li"},"resize")," property to set whether the ",Object(b.b)("inlineCode",{parentName:"li"},"Textarea")," is resizable, and if so, in which directions. You can set the value to ",Object(b.b)("inlineCode",{parentName:"li"},"none"),", ",Object(b.b)("inlineCode",{parentName:"li"},"both"),", ",Object(b.b)("inlineCode",{parentName:"li"},"horizontal"),", or ",Object(b.b)("inlineCode",{parentName:"li"},"vertical"),".")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'\nfunction Example() {\n  const [resize, setResize] = React.useState(\'both\');\n\n  return (\n    <>\n      <Text mb="2x">resize:</Text>\n      <Stack direction="row" spacing=".5rem" mb="4x">\n        <Button variant="outline" selected={resize === \'none\'} onClick={() => setResize(\'none\')}>none</Button>\n        <Button variant="outline" selected={resize === \'both\'} onClick={() => setResize(\'both\')}>both</Button>\n        <Button variant="outline" selected={resize === \'horizontal\'} onClick={() => setResize(\'horizontal\')}>horizontal</Button>\n        <Button variant="outline" selected={resize === \'vertical\'} onClick={() => setResize(\'vertical\')}>vertical</Button>\n      </Stack>\n      <Textarea\n        defaultValue="Placeholder text"\n        width="auto"\n        resize={resize}\n        rows="3"\n        cols="12"\n        minLength={4}\n        maxLength={16}\n      />\n    </>\n  );\n}\n')),Object(b.b)("h3",null,"Variants"),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"Textarea")," component comes in 3 variants: ",Object(b.b)("inlineCode",{parentName:"p"},"outline"),", ",Object(b.b)("inlineCode",{parentName:"p"},"filled"),", and ",Object(b.b)("inlineCode",{parentName:"p"},"unstyled"),". Pass the ",Object(b.b)("inlineCode",{parentName:"p"},"variant")," prop and set it to either of these values."),Object(b.b)("h4",null,Object(b.b)("inlineCode",{parentName:"h4"},"outline")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'<Textarea variant="outline" placeholder="John Doe" />\n')),Object(b.b)("h4",null,Object(b.b)("inlineCode",{parentName:"h4"},"filled")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'<Textarea variant="filled" placeholder="John Doe" />\n')),Object(b.b)("h4",null,Object(b.b)("inlineCode",{parentName:"h4"},"unstyled")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'<Textarea variant="unstyled" placeholder="John Doe" />\n')),Object(b.b)("h3",null,"Attributes"),Object(b.b)("p",null,"General form input attributes are supported, such as ",Object(b.b)("inlineCode",{parentName:"p"},"disabled"),", ",Object(b.b)("inlineCode",{parentName:"p"},"readOnly"),", ",Object(b.b)("inlineCode",{parentName:"p"},"required"),", etc."),Object(b.b)("h4",null,Object(b.b)("inlineCode",{parentName:"h4"},"disabled")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'<Stack directin="column" spacing="4x">\n  <Textarea disabled placeholder="Placeholder text" />\n  <Textarea disabled placeholder="Placeholder text" defaultValue="Disabled" />\n</Stack>\n')),Object(b.b)("h4",null,Object(b.b)("inlineCode",{parentName:"h4"},"readOnly")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'<Stack directin="column" spacing="4x">\n  <Textarea readOnly placeholder="Placeholder text" />\n  <Textarea readOnly placeholder="Placeholder text" defaultValue="Read-only" />\n</Stack>\n')),Object(b.b)("h4",null,Object(b.b)("inlineCode",{parentName:"h4"},"required")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),'<Textarea required placeholder="Placeholder text" />\n')),Object(b.b)("h3",null,"Validation"),Object(b.b)("p",null,"Use the ",Object(b.b)("inlineCode",{parentName:"p"},"isInvalid")," attribute to indicate that the value entered into an input field does not conform to the format expected by the application. ",Object(b.b)("inlineCode",{parentName:"p"},"isInvalid")," can also be used to indicate that a required field has not been filled in."),Object(b.b)("p",null,"Set ",Object(b.b)("inlineCode",{parentName:"p"},"isInvalid")," to ",Object(b.b)("inlineCode",{parentName:"p"},"true")," on the fields that have failed validation, otherwise set it to ",Object(b.b)("inlineCode",{parentName:"p"},"false")," if no errors detected."),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx",metastring:"noInline",noInline:!0}),'const InlineError = (props) => (\n  <Text fontSize="sm" lineHeight="sm" color="red:50" {...props} />\n);\n\nconst MultilineInputField = ({\n  value,\n  onChange,\n  ...props\n}) => {\n  const isInvalid = (value === \'\');\n  let invalidTextareaStyle = {};\n  if (isInvalid) {\n    invalidTextareaStyle = {\n      isInvalid: true,\n      pr: \'10x\',\n    };\n  }\n\n  return (\n    <>\n      <Flex position="relative" alignItems="center" mb="1x">\n        <Textarea\n          resize="none"\n          rows="3"\n          placeholder="Placeholder text"\n          value={value}\n          onChange={onChange}\n          {...invalidTextareaStyle}\n        />\n        {isInvalid && (\n          <Box position="absolute" right={0} top=".375rem">\n            <TMIcon name="warning-circle" px="3x" color="red:50" />\n          </Box>\n        )}\n      </Flex>\n      <Box>\n        {isInvalid && (\n          <InlineError>This is a required field.</InlineError>\n        )}\n      </Box>\n    </>\n  );\n};\n\nfunction Example() {\n  const [value, setValue] = React.useState(\'\');\n  const onChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <MultilineInputField value={value} onChange={onChange} />\n  );\n}\n\nrender(<Example />);\n')),Object(b.b)("h2",null,"Props"),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"Textarea")," composes the ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"./inputbase"}),Object(b.b)("inlineCode",{parentName:"a"},"InputBase"))," component."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Default"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"rows"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"number"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Specifies the visible number of lines in a text area.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"cols"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"number"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Specifies the visible width of a text area.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"maxLength"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"number"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Specifies a maximum number of characters that is allowed to contain.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"minLength"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"number"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Specifies a minimum length that is considered valid.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"resize"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"string"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"One of: ",Object(b.b)("inlineCode",{parentName:"td"},"'none'"),", ",Object(b.b)("inlineCode",{parentName:"td"},"'both'"),", ",Object(b.b)("inlineCode",{parentName:"td"},"'horizontal'"),", ",Object(b.b)("inlineCode",{parentName:"td"},"'vertical'"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"variant"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"string"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"'outline'"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"The variant of the input style to use. One of: ",Object(b.b)("inlineCode",{parentName:"td"},"'outline'"),", ",Object(b.b)("inlineCode",{parentName:"td"},"'filled'"),", ",Object(b.b)("inlineCode",{parentName:"td"},"'unstyled'"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"disabled"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"boolean"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"If ",Object(b.b)("inlineCode",{parentName:"td"},"true"),", the user cannot interact with the control. This sets ",Object(b.b)("inlineCode",{parentName:"td"},"aria-disabled=true")," and you can style this state by passing the ",Object(b.b)("inlineCode",{parentName:"td"},"_disabled")," prop.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"readOnly"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"boolean"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"If ",Object(b.b)("inlineCode",{parentName:"td"},"true"),", prevents the value of the input from being edited.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"isInvalid"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"boolean"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"If ",Object(b.b)("inlineCode",{parentName:"td"},"true"),", the input will indicate an error. You can style this state by passing the ",Object(b.b)("inlineCode",{parentName:"td"},"_invalid")," prop.")))))}p.isMDXComponent=!0}},[["aUHR",0,1]]]);