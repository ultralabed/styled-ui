(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{"+wNj":function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}n.d(t,"a",(function(){return r}))},HbGN:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n("+wNj");function a(e,t){if(null==e)return{};var n,a,o=Object(r.a)(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}},Km8e:function(e,t,n){"use strict";var r=Object.assign.bind(Object);e.exports=r,e.exports.default=e.exports},Lw0z:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return u}));var r=n("cxan"),a=n("HbGN"),o=n("ERkP"),l=n.n(o),i=n("ZVZ0"),c=(l.a.createElement,{}),b="wrapper";function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)(b,Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",null,"Grid"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"Grid")," is a ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"./box"}),Object(i.b)("inlineCode",{parentName:"a"},"Box"))," with ",Object(i.b)("inlineCode",{parentName:"p"},"display: grid")," and comes with helpful style shorthand props."),Object(i.b)("h2",null,"Import"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"import Grid from '@trendmicro/react-styled-ui/Grid';\n// or\nimport { Grid } from '@trendmicro/react-styled-ui';\n")),Object(i.b)("h2",null,"Usage"),Object(i.b)("p",null,"Grid provides the following style shorthand props:"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(r.a)({parentName:"tr"},{align:"left"}),"Shorthand Prop"),Object(i.b)("th",Object(r.a)({parentName:"tr"},{align:"left"}),"Style Prop"),Object(i.b)("th",Object(r.a)({parentName:"tr"},{align:"left"}),"CSS Property"),Object(i.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"gap"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"gridGap"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),Object(i.b)("a",Object(r.a)({parentName:"td"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/gap"}),"grid-gap")),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Sets the gaps (gutters) between rows and columns. It is a shorthand for ",Object(i.b)("inlineCode",{parentName:"td"},"row-gap")," and ",Object(i.b)("inlineCode",{parentName:"td"},"column-gap"),".")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"rowGap"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"gridRowGap"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),Object(i.b)("a",Object(r.a)({parentName:"td"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/row-gap"}),"grid-row-gap")),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Sets the size of the gap (gutter) between an element's grid rows.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"columnGap"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"gridColumnGap"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),Object(i.b)("a",Object(r.a)({parentName:"td"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/column-gap"}),"grid-column-gap")),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Sets the size of the gap (gutter) between an element's columns.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"row"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"gridRow"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),Object(i.b)("a",Object(r.a)({parentName:"td"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-row"}),"grid-row")),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"a shorthand property for ",Object(i.b)("inlineCode",{parentName:"td"},"grid-row-start")," and ",Object(i.b)("inlineCode",{parentName:"td"},"grid-row-end"),".")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"column"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"gridColumn"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),Object(i.b)("a",Object(r.a)({parentName:"td"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column"}),"grid-column")),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"A shorthand property for ",Object(i.b)("inlineCode",{parentName:"td"},"grid-column-start")," and ",Object(i.b)("inlineCode",{parentName:"td"},"grid-column-end"),".")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"area"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"gridArea"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),Object(i.b)("a",Object(r.a)({parentName:"td"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-area"}),"grid-area")),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"A shorthand property for ",Object(i.b)("inlineCode",{parentName:"td"},"grid-row-start"),", ",Object(i.b)("inlineCode",{parentName:"td"},"grid-column-start"),", ",Object(i.b)("inlineCode",{parentName:"td"},"grid-row-end")," and ",Object(i.b)("inlineCode",{parentName:"td"},"grid-column-end"),".")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"autoFlow"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"gridAutoFlow"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),Object(i.b)("a",Object(r.a)({parentName:"td"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-auto-flow"}),"grid-auto-flow")),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Controls how the auto-placement algorithm works.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"autoRows"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"gridAutoRows"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),Object(i.b)("a",Object(r.a)({parentName:"td"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-auto-rows"}),"grid-auto-rows")),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Specifies the size of an implicitly-created grid row track or pattern of tracks.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"autoColumns"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"gridAutoColumns"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),Object(i.b)("a",Object(r.a)({parentName:"td"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-auto-columns"}),"grid-auto-columns")),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Specifies the size of an implicitly-created grid column track or pattern of tracks.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"templateRows"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"gridTemplateRows"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),Object(i.b)("a",Object(r.a)({parentName:"td"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-rows"}),"grid-template-rows")),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Defines the line names and track sizing functions of the grid rows.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"templateColumns"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"gridTemplateColumns"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),Object(i.b)("a",Object(r.a)({parentName:"td"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-columns"}),"grid-template-columns")),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Defines the line names and track sizing functions of the grid columns.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"templateAreas"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"gridTemplateAreas"),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),Object(i.b)("a",Object(r.a)({parentName:"td"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-areas"}),"grid-template-areas")),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Specifies named grid areas.")))),Object(i.b)("h3",null,"The ",Object(i.b)("inlineCode",{parentName:"h3"},"gap")," (",Object(i.b)("inlineCode",{parentName:"h3"},"gridGap"),") property"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx",metastring:"noInline",noInline:!0}),'const GridItem = (props) => (\n  <Grid bg="blue:50" border={1} borderColor="blue:60" p="3x" {...props} />\n);\n\nfunction Example() {\n  const [value, setValue] = React.useState(\'0\');\n\n  return (\n    <>\n      <Stack direction="row" spacing=".5rem" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'0\')}>0</Button>\n        <Button variant="outline" onClick={() => setValue(\'10%\')}>10%</Button>\n        <Button variant="outline" onClick={() => setValue(\'1rem\')}>1rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'10px 20px\')}>10px 20px</Button>\n        <Button variant="outline" onClick={() => setValue(\'calc(20px + 10%)\')}>calc(20px + 10%)</Button>\n      </Stack>\n      <pre>\n        {`<Grid gap="${value}">`}\n      </pre>\n      <Grid\n        gap={value}\n        templateColumns="1fr 1fr"\n        bg="gray:20"\n        p="4x"\n        transition="all .3s ease-in"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n}\n\nrender(<Example />);\n')),Object(i.b)("h3",null,"The ",Object(i.b)("inlineCode",{parentName:"h3"},"rowGap")," (",Object(i.b)("inlineCode",{parentName:"h3"},"gridRowGap"),") property"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx",metastring:"noInline",noInline:!0}),'const GridItem = (props) => (\n  <Grid bg="blue:50" border={1} borderColor="blue:60" p="3x" {...props} />\n);\n\nfunction Example() {\n  const [value, setValue] = React.useState(\'0\');\n\n  return (\n    <>\n      <Stack direction="row" spacing=".5rem" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'0\')}>0</Button>\n        <Button variant="outline" onClick={() => setValue(\'10%\')}>10%</Button>\n        <Button variant="outline" onClick={() => setValue(\'1rem\')}>1rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'20px\')}>20px</Button>\n      </Stack>\n      <pre>\n        {`<Grid rowGap="${value}">`}\n      </pre>\n      <Grid\n        rowGap={value}\n        templateColumns="1fr 1fr"\n        bg="gray:20"\n        p="4x"\n        transition="all .3s ease-in"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n}\n\nrender(<Example />);\n')),Object(i.b)("h3",null,"The ",Object(i.b)("inlineCode",{parentName:"h3"},"columnGap")," (",Object(i.b)("inlineCode",{parentName:"h3"},"gridColumnGap"),") property"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx",metastring:"noInline",noInline:!0}),'const GridItem = (props) => (\n  <Grid bg="blue:50" border={1} borderColor="blue:60" p="3x" {...props} />\n);\n\nfunction Example() {\n  const [value, setValue] = React.useState(\'0\');\n\n  return (\n    <>\n      <Stack direction="row" spacing=".5rem" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'0\')}>0</Button>\n        <Button variant="outline" onClick={() => setValue(\'10%\')}>10%</Button>\n        <Button variant="outline" onClick={() => setValue(\'1rem\')}>1rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'20px\')}>20px</Button>\n      </Stack>\n      <pre>\n        {`<Grid columnGap="${value}">`}\n      </pre>\n      <Grid\n        columnGap={value}\n        templateColumns="1fr 1fr"\n        bg="gray:20"\n        p="4x"\n        transition="all .3s ease-in"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n}\n\nrender(<Example />);\n')),Object(i.b)("h3",null,"The ",Object(i.b)("inlineCode",{parentName:"h3"},"row")," (",Object(i.b)("inlineCode",{parentName:"h3"},"gridRow"),") property"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx",metastring:"noInline",noInline:!0}),'const GridItem = (props) => (\n  <Grid bg="blue:50" border={1} borderColor="blue:60" p="3x" {...props} />\n);\n\nfunction Example() {\n  const [value, setValue] = React.useState(\'1\');\n\n  return (\n    <>\n      <Stack direction="row" spacing=".5rem" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'1\')}>1</Button>\n        <Button variant="outline" onClick={() => setValue(\'1 / 3\')}>1 / 3</Button>\n        <Button variant="outline" onClick={() => setValue(\'2 / -1\')}>2 / -1</Button>\n        <Button variant="outline" onClick={() => setValue(\'1 / span 2\')}>1 / span 2</Button>\n      </Stack>\n      <Grid\n        templateRows="repeat(3,minmax(3rem,auto))"\n        templateColumns="1fr 1.5fr 1fr"\n        gap=".5rem"\n        bg="gray:20"\n        p="4x"\n      >\n        <GridItem row={value} bg="red:50" borderColor="red:60">One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n      </Grid>\n    </>\n  );\n}\n\nrender(<Example />);\n')),Object(i.b)("h3",null,"The ",Object(i.b)("inlineCode",{parentName:"h3"},"column")," (",Object(i.b)("inlineCode",{parentName:"h3"},"gridColumn"),") property"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx",metastring:"noInline",noInline:!0}),'const GridItem = (props) => (\n  <Grid bg="blue:50" border={1} borderColor="blue:60" p="3x" {...props} />\n);\n\nfunction Example() {\n  const [value, setValue] = React.useState(\'1\');\n\n  return (\n    <>\n      <Stack direction="row" spacing=".5rem" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'1\')}>1</Button>\n        <Button variant="outline" onClick={() => setValue(\'1 / 3\')}>1 / 3</Button>\n        <Button variant="outline" onClick={() => setValue(\'2 / -1\')}>2 / -1</Button>\n        <Button variant="outline" onClick={() => setValue(\'1 / span 2\')}>1 / span 2</Button>\n      </Stack>\n      <Grid\n        templateRows="repeat(3,minmax(3rem,auto))"\n        templateColumns="1fr 1.5fr 1fr"\n        gap=".5rem"\n        bg="gray:20"\n        p="4x"\n      >\n        <GridItem column={value} bg="red:50" borderColor="red:60">One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n      </Grid>\n    </>\n  );\n}\n\nrender(<Example />);\n')),Object(i.b)("h3",null,"The ",Object(i.b)("inlineCode",{parentName:"h3"},"area")," (",Object(i.b)("inlineCode",{parentName:"h3"},"gridArea"),") property"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx",metastring:"noInline",noInline:!0}),'const GridItem = (props) => (\n  <Grid bg="blue:50" border={1} borderColor="blue:60" p="3x" {...props} />\n);\n\nfunction Example() {\n  const [value, setValue] = React.useState(\'a\');\n\n  return (\n    <>\n      <Stack direction="row" spacing=".5rem" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'a\')}>a</Button>\n        <Button variant="outline" onClick={() => setValue(\'b\')}>b</Button>\n        <Button variant="outline" onClick={() => setValue(\'c\')}>c</Button>\n        <Button variant="outline" onClick={() => setValue(\'2 / 1 / 2 / 4\')}>2 / 1 / 2 / 4</Button>\n      </Stack>\n      <Grid\n        templateRows="repeat(3,minmax(3rem,auto))"\n        templateColumns="1fr 1fr 1fr"\n        templateAreas={`\n          "a a a"\n          "b c c"\n          "b c c"\n        `}\n        gap=".5rem"\n        bg="gray:20"\n        p="4x"\n      >\n        <GridItem area={value} bg="red:50" borderColor="red:60">Example</GridItem>\n      </Grid>\n    </>\n  );\n}\n\nrender(<Example />);\n')),Object(i.b)("h3",null,"The ",Object(i.b)("inlineCode",{parentName:"h3"},"autoFlow")," (",Object(i.b)("inlineCode",{parentName:"h3"},"gridAutoFlow"),") property"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx",metastring:"noInline",noInline:!0}),'const GridItem = (props) => (\n  <Grid bg="blue:50" border={1} borderColor="blue:60" p="3x" {...props} />\n);\n\nfunction Example() {\n  const [value, setValue] = React.useState(\'row\');\n\n  return (\n    <>\n      <Stack direction="row" spacing=".5rem" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'row\')}>row</Button>\n        <Button variant="outline" onClick={() => setValue(\'column\')}>column</Button>\n        <Button variant="outline" onClick={() => setValue(\'row dense\')}>row dense</Button>\n      </Stack>\n      <pre>\n        {`<Grid autoFlow="${value}">`}\n      </pre>\n      <Grid\n        autoFlow={value}\n        templateRows="repeat(3,minmax(3rem,auto))"\n        templateColumns="1fr 1fr 1fr"\n        gap=".5rem"\n        bg="gray:20"\n        p="4x"\n      >\n        <GridItem column="auto/span 2">One</GridItem>\n        <GridItem column="auto/span 2">Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n}\n\nrender(<Example />);\n')),Object(i.b)("h3",null,"The ",Object(i.b)("inlineCode",{parentName:"h3"},"autoRows")," (",Object(i.b)("inlineCode",{parentName:"h3"},"gridAutoRows"),") property"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx",metastring:"noInline",noInline:!0}),'const GridItem = (props) => (\n  <Grid bg="blue:50" border={1} borderColor="blue:60" p="3x" {...props} />\n);\n\nfunction Example() {\n  const [value, setValue] = React.useState(\'auto\');\n\n  return (\n    <>\n      <Stack direction="row" spacing=".5rem" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'auto\')}>auto</Button>\n        <Button variant="outline" onClick={() => setValue(\'3rem\')}>3rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'min-content\')}>min-content</Button>\n        <Button variant="outline" onClick={() => setValue(\'minmax(2rem, auto)\')}>minmax(2rem, auto)</Button>\n      </Stack>\n      <pre>\n        {`<Grid autoRows="${value}">`}\n      </pre>\n      <Grid\n        autoRows={value}\n        templateColumns="1fr 1fr"\n        gap=".5rem"\n        bg="gray:20"\n        p="4x"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem></GridItem>\n      </Grid>\n    </>\n  );\n}\n\nrender(<Example />);\n')),Object(i.b)("h3",null,"The ",Object(i.b)("inlineCode",{parentName:"h3"},"autoColumns")," (",Object(i.b)("inlineCode",{parentName:"h3"},"gridAutoColumns"),") property"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx",metastring:"noInline",noInline:!0}),'const GridItem = (props) => (\n  <Grid bg="blue:50" border={1} borderColor="blue:60" p="3x" {...props} />\n);\n\nfunction Example() {\n  const [value, setValue] = React.useState(\'auto\');\n\n  return (\n    <>\n      <Stack direction="row" spacing=".5rem" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'auto\')}>auto</Button>\n        <Button variant="outline" onClick={() => setValue(\'1fr\')}>1fr</Button>\n        <Button variant="outline" onClick={() => setValue(\'min-content\')}>min-content</Button>\n        <Button variant="outline" onClick={() => setValue(\'minmax(3rem, auto)\')}>minmax(3rem, auto)</Button>\n      </Stack>\n      <pre>\n        {`<Grid autoColumns="${value}">`}\n      </pre>\n      <Grid\n        autoColumns={value}\n        gap=".5rem"\n        bg="gray:20"\n        p="4x"\n      >\n        <GridItem column="1/3">One</GridItem>\n        <GridItem column="2">Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n}\n\nrender(<Example />);\n')),Object(i.b)("h3",null,"The ",Object(i.b)("inlineCode",{parentName:"h3"},"templateRows")," (",Object(i.b)("inlineCode",{parentName:"h3"},"gridTemplateRows"),") property"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx",metastring:"noInline",noInline:!0}),'const GridItem = (props) => (\n  <Grid bg="blue:50" border={1} borderColor="blue:60" p="3x" {...props} />\n);\n\nfunction Example() {\n  const [value, setValue] = React.useState(\'auto\');\n\n  return (\n    <>\n      <Stack direction="row" spacing=".5rem" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'auto\')}>auto</Button>\n        <Button variant="outline" onClick={() => setValue(\'3rem 4rem 3rem\')}>3rem 4rem 3rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'1fr 2fr 1fr\')}>1fr 2fr 1fr</Button>\n        <Button variant="outline" onClick={() => setValue(\'3rem auto minmax(3rem, 4rem)\')}>3rem auto minmax(3rem, 4rem)</Button>\n      </Stack>\n      <pre>\n        {`<Grid templateRows="${value}">`}\n      </pre>\n      <Grid\n        templateRows={value}\n        templateColumns="1fr 1fr"\n        gap=".5rem"\n        bg="gray:20"\n        p="4x"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n}\n\nrender(<Example />);\n')),Object(i.b)("h3",null,"The ",Object(i.b)("inlineCode",{parentName:"h3"},"templateColumns")," (",Object(i.b)("inlineCode",{parentName:"h3"},"gridTemplateColumns"),") property"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx",metastring:"noInline",noInline:!0}),'const GridItem = (props) => (\n  <Grid bg="blue:50" border={1} borderColor="blue:60" p="3x" {...props} />\n);\n\nfunction Example() {\n  const [value, setValue] = React.useState(\'4rem 4rem\');\n\n  return (\n    <>\n      <Stack direction="row" spacing=".5rem" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'4rem 4rem\')}>4rem 4rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'1fr 4rem\')}>1fr 4rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'1fr auto\')}>1fr auto</Button>\n        <Button variant="outline" onClick={() => setValue(\'1fr 2fr\')}>1fr 2fr</Button>\n      </Stack>\n      <pre>\n        {`<Grid templateColumns="${value}">`}\n      </pre>\n      <Grid\n        templateColumns={value}\n        gap=".5rem"\n        bg="gray:20"\n        p="4x"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n}\n\nrender(<Example />);\n')),Object(i.b)("h3",null,"The ",Object(i.b)("inlineCode",{parentName:"h3"},"templateAreas")," (",Object(i.b)("inlineCode",{parentName:"h3"},"gridTemplateAreas"),") property"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx",metastring:"noInline",noInline:!0}),'const GridItem = (props) => (\n  <Grid bg="blue:50" border={1} borderColor="blue:60" p="3x" {...props} />\n);\n\nfunction Example() {\n  const [value, setValue] = React.useState(\'"a a a" "b c c" "b c c"\');\n\n  return (\n    <>\n      <Stack direction="row" spacing=".5rem" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'"a a a" "b c c" "b c c"\')}>\n          <Box fontFamily="mono" py="1x">\n            <Box>"a a a"</Box>\n            <Box>"b c c"</Box>\n            <Box>"b c c"</Box>\n          </Box>\n        </Button>\n        <Button variant="outline" onClick={() => setValue(\'"b b a" "b b c" "b b c"\')}>\n          <Box fontFamily="mono" py="1x">\n            <Box>"b b a"</Box>\n            <Box>"b b c"</Box>\n            <Box>"b b c"</Box>\n          </Box>\n        </Button>\n        <Button variant="outline" onClick={() => setValue(\'"a a ." "a a ." ". b c"\')}>\n          <Box fontFamily="mono" py="1x">\n            <Box>"a a ."</Box>\n            <Box>"a a ."</Box>\n            <Box>". b c"</Box>\n          </Box>\n        </Button>\n      </Stack>\n      <pre>\n        {`<Grid templateAreas=${JSON.stringify(value)}>`}\n      </pre>\n      <Grid\n        templateAreas={value}\n        templateRows="repeat(3,minmax(3rem,auto))"\n        templateColumns="1fr 1fr 1fr"\n        gap=".5rem"\n        bg="gray:20"\n        p="4x"\n      >\n        <GridItem area="a" bg="blue:50" borderColor="blue:60">One (a)</GridItem>\n        <GridItem area="b" bg="red:50" borderColor="red:60">Two (b)</GridItem>\n        <GridItem area="c" bg="green:50" borderColor="green:60">Three (c)</GridItem>\n      </Grid>\n    </>\n  );\n}\n\nrender(<Example />);\n')))}u.isMDXComponent=!0},ZVZ0:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return O}));var r=n("ERkP"),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var b=a.a.createContext({}),u=function(e){var t=a.a.useContext(b),n=t;return e&&(n="function"===typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=u(e.components);return a.a.createElement(b.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},s=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),m=u(n),p=r,s=m["".concat(l,".").concat(p)]||m[p]||d[p]||o;return n?a.a.createElement(s,i(i({ref:t},b),{},{components:n})):a.a.createElement(s,i({ref:t},b))}));function O(e,t){var n=arguments,r=t&&t.mdxType;if("string"===typeof e||r){var o=n.length,l=new Array(o);l[0]=s;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"===typeof e?e:r,l[1]=i;for(var b=2;b<o;b++)l[b]=n[b];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},cxan:function(e,t,n){"use strict";function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}n.d(t,"a",(function(){return r}))},wE7H:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/grid",function(){return n("Lw0z")}])}},[["wE7H",0,1]]]);